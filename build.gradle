plugins {
	id 'fabric-loom' version '0.11.+'
	id 'maven-publish'
	id "com.modrinth.minotaur" version "2.+"
	id 'com.matthewprenger.cursegradle' version '1.4.0'
}

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

def vNum = "1.0.2"
def vType = "Alpha"
def clog = "Added timed reset. Now with 5% more time shenanigans!"

repositories {
	mavenCentral()

	maven {
		url 'https://jitpack.io'
	}
	maven {
		url "https://maven.terraformersmc.com/"
	}
	maven {
		url "https://maven.shedaniel.me/"
	}
	maven {
		name = 'Ladysnake Mods'
		url = 'https://ladysnake.jfrog.io/artifactory/mods'
		content {
			includeGroup 'io.github.ladysnake'
			includeGroupByRegex 'io\\.github\\.onyxstudios.*'
		}
	}
}

dependencies {
	// To change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	modImplementation "io.github.themegax:slowmo-lib:${project.slowmolib_version}"
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 17
}

java {
	withSourcesJar()
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.archivesBaseName}"}
	}
}

tasks.modrinth.dependsOn(tasks.modrinthSyncBody)

modrinth {
	token = System.getenv("MODRINTH_TOKEN") // This is the default. Remember to have the MODRINTH_TOKEN environment variable set or else this will fail, or set it to whatever you want - just make sure it stays private!
	projectId = "chronos-clock" // This can be the project ID or the slug. Either will work!
	versionNumber = vNum // You don't need to set this manually. Will fail if Modrinth has this version already
	versionName = "Chronos ${vType} ${vNum}"
	versionType = vType.toLowerCase() // can be 'Release', 'beta' or 'alpha'
	uploadFile = remapJar // With Loom, this MUST be set to `remapJar` instead of `jar`!
	gameVersions = ["1.19", "1.19.1", "1.19.2"] // Must be an array, even with only one version
	loaders = ["fabric"] // Must also be an array - no need to specify this if you're using Loom or ForgeGradle
	changelog = clog
	dependencies { // A special DSL for creating dependencies
		// scope.type
		// The scope can be `required`, `optional`, `incompatible`, or `embedded`
		// The type can either be `project` or `version`
		optional.project "cloth-config"
		optional.project "modmenu"
		required.project "slowmo-lib"
		required.project "fabric-api"
	}
	syncBodyFrom = rootProject.file("README.md").text
}

curseforge {
	if (System.getenv('CURSEFORGE_TOKEN') != null) {
		apiKey = System.getenv('CURSEFORGE_TOKEN')
	} else {
		apiKey = "DUMMY"
	}
	project {
		id = '659731'
		changelog = clog
		releaseType = vType.toLowerCase()
		addGameVersion '1.19'
		addGameVersion '1.19.1'
		addGameVersion '1.19.2'
		addGameVersion 'Fabric'
		addGameVersion 'Java 17'
		addGameVersion 'Java 18'

		mainArtifact(remapJar) {
			displayName = "Chronos ${vType} ${vNum}"
			relations {
				requiredDependency 'fabric-api'
				requiredDependency 'slowmo-lib'
				optionalDependency 'cloth-config'
				optionalDependency 'modmenu'
			}
		}
	}
}

// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
		}
	}

	repositories {}
}
